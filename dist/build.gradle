/*
 * dist Gradle build script
 */

def buildProject = project

/* Configure the rootProject */
configure(rootProject) {
  defaultTasks = [':build']
  buildDir = buildProject.buildDir

  task build {
    dependsOn ":${buildProject.name}:build"
    dependsOn ":${buildProject.name}:checkNeeded"
    dependsOn ":${buildProject.name}:releaseNeeded"
    dependsOn ":${buildProject.name}:index"
    description "Assembles, tests and releases the ${buildProject.name} project."
    group 'build'
  }
}

/* Configure this project */
def releaserepo = file(bnd('releaserepo', 'bundles')) /* Release repository. */

task('index') {
  description 'Index the release repository.'
  dependsOn releaseNeeded
  group 'release'

  /* Bundles to index. */
  def bundles = fileTree(releaserepo) {
    include '**/*.jar'
    exclude '**/*-latest.jar'
  }

  inputs.files bundles

  /* Index files */
  def obr_uncompressed = new File(releaserepo, 'repository.xml')
  def obr_compressed = new File(releaserepo, 'repository.zip')
  def r5_uncompressed = new File(releaserepo, 'index.xml')
  def r5_compressed = new File(releaserepo, 'index.xml.gz')

  outputs.files obr_uncompressed, obr_compressed, r5_uncompressed, r5_compressed

  doLast {
    def bundlesToIndex = bundles.collect { it.absolutePath }
    /* OBR uncompressed. */
    javaexec {
      classpath cnf.file('gradle/dependencies/org.osgi.impl.bundle.bindex.jar')
      main = 'org.osgi.impl.bundle.bindex.cli.Index'
      args '-r', obr_uncompressed
      args '-d', releaserepo.toURI()
      args '-n', 'bnd'
      args bundlesToIndex
    }.assertNormalExitValue()
    logger.info "Generated index ${obr_uncompressed}."

    /* OBR compressed. */
    javaexec {
      classpath cnf.file('gradle/dependencies/org.osgi.impl.bundle.bindex.jar')
      main = 'org.osgi.impl.bundle.bindex.cli.Index'
      args '-r', obr_compressed
      args '-d', releaserepo.toURI()
      args '-n', 'bnd'
      args bundlesToIndex
    }.assertNormalExitValue()
    logger.info "Generated index ${obr_compressed}."

    /* R5 uncompressed. */
    javaexec {
      classpath cnf.file('gradle/dependencies/org.osgi.impl.bundle.repoindex.cli.jar')
      main = 'org.osgi.impl.bundle.bindex.cli.Index'
      args '--pretty'
      args '-r', r5_uncompressed
      args '-d', releaserepo
      args '-n', 'bnd'
      args bundlesToIndex
    }.assertNormalExitValue()
    logger.info "Generated index ${r5_uncompressed}."

    /* R5 compressed. */
    javaexec {
      classpath cnf.file('gradle/dependencies/org.osgi.impl.bundle.repoindex.cli.jar')
      main = 'org.osgi.impl.bundle.bindex.cli.Index'
      args '-r', r5_compressed
      args '-d', releaserepo
      args '-n', 'bnd'
      args bundlesToIndex
    }.assertNormalExitValue()
    logger.info "Generated index ${r5_compressed}."
  }
}

clean {
  doLast {
    project.delete(releaserepo)
  }
}
